IF DB_ID('Cheaper') IS NULL BEGIN CREATE DATABASE Cheaper; END
GO

USE Cheaper;
GO
BEGIN TRANSACTION;
insert into Users values ('lubo', 'f6a3a3e101a484c1b0ff5facacf1be56', 'lubo@ue.katowice.pl', getdate(), getdate(), null);
commit;
CREATE TABLE Users (
	UserName NVARCHAR(24) PRIMARY KEY,
	Passwd VARCHAR(32) NOT NULL CHECK (DATALENGTH(Passwd) = 32),
	Email NVARCHAR(40) NOT NULL,
	BirthDate DATETIME NOT NULL,
	RegisterDate DATETIME NOT NULL DEFAULT GETDATE(),
	VerifCode NVARCHAR(16) NULL,
	CONSTRAINT MinPasswdLength CHECK (DATALENGTH(Passwd) = 32));
GO

CREATE TABLE AdditionalUserInfo (
	UserID NVARCHAR(24) PRIMARY KEY,
	ShowEmail BIT NOT NULL DEFAULT 0,
	ShowPhone BIT NOT NULL DEFAULT 0,
	ShowBirthDate BIT NOT NULL DEFAULT 1,
	DisplayPic BINARY NULL,
	GaduGadu NVARCHAR(9) NULL,
	Phone NVARCHAR(12) NULL,
	FOREIGN KEY (UserID) REFERENCES Users(UserName) ON UPDATE CASCADE ON DELETE NO ACTION );
GO

CREATE TABLE Contacts (
	UserID NVARCHAR(24) NOT NULL,
	ContactID NVARCHAR(24) NOT NULL,
	CreationDate DATETIME NOT NULL DEFAULT GETDATE(),
	PRIMARY KEY (UserID, ContactID),
	FOREIGN KEY (UserID) REFERENCES Users(UserName) ON UPDATE CASCADE ON DELETE NO ACTION );
GO

CREATE TABLE Budgets (
	BudgetID INT IDENTITY(1,1) PRIMARY KEY,
	UserID NVARCHAR(24) NOT NULL,
	BudgetName NVARCHAR(50),
	CreationDate DATETIME NOT NULL DEFAULT GETDATE(),
	Income DECIMAL(9,2) NOT NULL DEFAULT 0,
	Expenses DECIMAL(9,2) NOT NULL DEFAULT 0,
	FOREIGN KEY (UserID) REFERENCES Users(UserName) ON UPDATE CASCADE ON DELETE NO ACTION);
GO

CREATE TABLE Shops (
	Id INT IDENTITY(1,1) PRIMARY KEY,
	FriendlyName NVARCHAR(50) NOT NULL,
	Street NVARCHAR(30) NULL,
	City NVARCHAR(30) NULL,
	PostCode NVARCHAR(6) NULL,
	CONSTRAINT PostCodeLength CHECK (DATALENGTH(PostCode) = 6 OR PostCode IS NULL));
GO

CREATE TABLE Categories (
	Id SMALLINT IDENTITY(1,1) PRIMARY KEY,
	Name NVARCHAR(30) NOT NULL);
GO

CREATE TABLE Products (
	Id BIGINT IDENTITY(1,1) PRIMARY KEY,
	CategoryID SMALLINT NOT NULL,
	Name NVARCHAR(40) NOT NULL,
	FOREIGN KEY (CategoryID) REFERENCES Categories(Id) ON UPDATE CASCADE ON DELETE NO ACTION);
GO

CREATE TABLE ExpenseCategories (
	Id INT IDENTITY(1,1) PRIMARY KEY,
	Name NVARCHAR(50) NOT NULL,
	Amount DECIMAL(9,2) NOT NULL DEFAULT 0,
	Balance DECIMAL(9,2) NULL);
GO

CREATE TRIGGER SetDefaultBalance ON ExpenseCategories
AFTER INSERT AS
BEGIN
	SET NOCOUNT ON;

	IF EXISTS (SELECT 1 FROM inserted WHERE Balance IS NULL)
	BEGIN
		UPDATE ExpenseCategories SET Balance = i.Amount
		FROM inserted i JOIN ExpenseCategories e ON i.Id = e.Id
		WHERE i.Balance IS NULL
	END
END
GO

CREATE TABLE BudgetPositions (
	PositionID BIGINT IDENTITY(1,1) PRIMARY KEY,
	BudgetID INT NOT NULL,
	ExpenseCatID INT NOT NULL,
	ShopID INT NOT NULL,
	ProdID BIGINT NOT NULL,
	Price DECIMAL(9,2) NOT NULL DEFAULT 0,
	PurchaseDate DATETIME NULL,
	Quantity SMALLINT NOT NULL DEFAULT 1,
	CreationDate DATETIME NOT NULL DEFAULT GETDATE(),
	AdditionalInfo NVARCHAR(300) NULL,
	FOREIGN KEY (BudgetID) REFERENCES Budgets(BudgetID) ON UPDATE CASCADE ON DELETE NO ACTION,
	FOREIGN KEY (ExpenseCatID) REFERENCES ExpenseCategories(Id) ON UPDATE CASCADE ON DELETE NO ACTION,
	FOREIGN KEY (ShopID) REFERENCES Shops(Id) ON UPDATE CASCADE ON DELETE NO ACTION,
	FOREIGN KEY (ProdID) REFERENCES Products(Id) ON UPDATE CASCADE ON DELETE NO ACTION,
	CONSTRAINT MinPrice CHECK (Price >= 0));
GO

CREATE TABLE Conversations (
	Id INT IDENTITY(1,1) PRIMARY KEY,
	CreationUserID NVARCHAR(24) NOT NULL,
	Name NVARCHAR(50) NULL,
	CreationDate DATETIME NOT NULL DEFAULT GETDATE(),
	FOREIGN KEY (CreationUserID) REFERENCES Users(UserName) ON UPDATE CASCADE ON DELETE NO ACTION);
GO

CREATE TABLE ConversationParticipants (
	ConversationID INT NOT NULL,
	UserID NVARCHAR(24) NOT NULL,
	PRIMARY KEY (ConversationID, UserID),
	FOREIGN KEY (ConversationID) REFERENCES Conversations(Id) ON UPDATE CASCADE ON DELETE NO ACTION,
	FOREIGN KEY (UserID) REFERENCES Users(UserName) ON UPDATE NO ACTION ON DELETE NO ACTION);
GO

CREATE TABLE Messages (
	MessageID INT,
	ConversationID INT NOT NULL,
	SenderID NVARCHAR(24) NOT NULL,
	Content NVARCHAR(3000) NOT NULL,
	SendDate DATETIME NOT NULL DEFAULT GETDATE(),
	PRIMARY KEY (MessageID, ConversationID),
	FOREIGN KEY (ConversationID) REFERENCES Conversations(Id) ON UPDATE CASCADE ON DELETE NO ACTION,
	FOREIGN KEY (SenderID) REFERENCES Users(UserName) ON UPDATE NO ACTION ON DELETE NO ACTION);
GO

ROLLBACK;